<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.blog.db.login.dao.LoginMapper">
  <resultMap id="BaseResultMap" type="com.blog.db.login.model.Login">
    <id column="LOGIN_ID" jdbcType="INTEGER" property="loginId" />
    <result column="ADMIN_ID" jdbcType="INTEGER" property="adminId" />
    <result column="DEVICE_IP" jdbcType="VARCHAR" property="deviceIp" />
    <result column="DEVICE_INFO" jdbcType="VARCHAR" property="deviceInfo" />
    <result column="SERVICE_KEY" jdbcType="VARCHAR" property="serviceKey" />
    <result column="IS_CURRENT" jdbcType="INTEGER" property="isCurrent" />
    <result column="LOGIN_RESULT" jdbcType="INTEGER" property="loginResult" />
    <result column="SESSION_ID" jdbcType="INTEGER" property="sessionId" />
    <result column="DEVICE_ID" jdbcType="VARCHAR" property="deviceId" />
    <result column="CREATION_DATE" jdbcType="TIMESTAMP" property="creationDate" />
  </resultMap>
  <sql id="Base_Column_List">
    LOGIN_ID, ADMIN_ID, DEVICE_IP, DEVICE_INFO, SERVICE_KEY, IS_CURRENT, LOGIN_RESULT, 
    SESSION_ID, DEVICE_ID, CREATION_DATE
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from login
    where LOGIN_ID = #{loginId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from login
    where LOGIN_ID = #{loginId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.blog.db.login.model.Login">
    insert into login (LOGIN_ID, ADMIN_ID, DEVICE_IP, 
      DEVICE_INFO, SERVICE_KEY, IS_CURRENT, 
      LOGIN_RESULT, SESSION_ID, DEVICE_ID, 
      CREATION_DATE)
    values (#{loginId,jdbcType=INTEGER}, #{adminId,jdbcType=INTEGER}, #{deviceIp,jdbcType=VARCHAR}, 
      #{deviceInfo,jdbcType=VARCHAR}, #{serviceKey,jdbcType=VARCHAR}, #{isCurrent,jdbcType=INTEGER}, 
      #{loginResult,jdbcType=INTEGER}, #{sessionId,jdbcType=INTEGER}, #{deviceId,jdbcType=VARCHAR}, 
      #{creationDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.blog.db.login.model.Login">
    insert into login
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="loginId != null">
        LOGIN_ID,
      </if>
      <if test="adminId != null">
        ADMIN_ID,
      </if>
      <if test="deviceIp != null">
        DEVICE_IP,
      </if>
      <if test="deviceInfo != null">
        DEVICE_INFO,
      </if>
      <if test="serviceKey != null">
        SERVICE_KEY,
      </if>
      <if test="isCurrent != null">
        IS_CURRENT,
      </if>
      <if test="loginResult != null">
        LOGIN_RESULT,
      </if>
      <if test="sessionId != null">
        SESSION_ID,
      </if>
      <if test="deviceId != null">
        DEVICE_ID,
      </if>
      <if test="creationDate != null">
        CREATION_DATE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="loginId != null">
        #{loginId,jdbcType=INTEGER},
      </if>
      <if test="adminId != null">
        #{adminId,jdbcType=INTEGER},
      </if>
      <if test="deviceIp != null">
        #{deviceIp,jdbcType=VARCHAR},
      </if>
      <if test="deviceInfo != null">
        #{deviceInfo,jdbcType=VARCHAR},
      </if>
      <if test="serviceKey != null">
        #{serviceKey,jdbcType=VARCHAR},
      </if>
      <if test="isCurrent != null">
        #{isCurrent,jdbcType=INTEGER},
      </if>
      <if test="loginResult != null">
        #{loginResult,jdbcType=INTEGER},
      </if>
      <if test="sessionId != null">
        #{sessionId,jdbcType=INTEGER},
      </if>
      <if test="deviceId != null">
        #{deviceId,jdbcType=VARCHAR},
      </if>
      <if test="creationDate != null">
        #{creationDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.blog.db.login.model.Login">
    update login
    <set>
      <if test="adminId != null">
        ADMIN_ID = #{adminId,jdbcType=INTEGER},
      </if>
      <if test="deviceIp != null">
        DEVICE_IP = #{deviceIp,jdbcType=VARCHAR},
      </if>
      <if test="deviceInfo != null">
        DEVICE_INFO = #{deviceInfo,jdbcType=VARCHAR},
      </if>
      <if test="serviceKey != null">
        SERVICE_KEY = #{serviceKey,jdbcType=VARCHAR},
      </if>
      <if test="isCurrent != null">
        IS_CURRENT = #{isCurrent,jdbcType=INTEGER},
      </if>
      <if test="loginResult != null">
        LOGIN_RESULT = #{loginResult,jdbcType=INTEGER},
      </if>
      <if test="sessionId != null">
        SESSION_ID = #{sessionId,jdbcType=INTEGER},
      </if>
      <if test="deviceId != null">
        DEVICE_ID = #{deviceId,jdbcType=VARCHAR},
      </if>
      <if test="creationDate != null">
        CREATION_DATE = #{creationDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where LOGIN_ID = #{loginId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.blog.db.login.model.Login">
    update login
    set ADMIN_ID = #{adminId,jdbcType=INTEGER},
      DEVICE_IP = #{deviceIp,jdbcType=VARCHAR},
      DEVICE_INFO = #{deviceInfo,jdbcType=VARCHAR},
      SERVICE_KEY = #{serviceKey,jdbcType=VARCHAR},
      IS_CURRENT = #{isCurrent,jdbcType=INTEGER},
      LOGIN_RESULT = #{loginResult,jdbcType=INTEGER},
      SESSION_ID = #{sessionId,jdbcType=INTEGER},
      DEVICE_ID = #{deviceId,jdbcType=VARCHAR},
      CREATION_DATE = #{creationDate,jdbcType=TIMESTAMP}
    where LOGIN_ID = #{loginId,jdbcType=INTEGER}
  </update>
</mapper>