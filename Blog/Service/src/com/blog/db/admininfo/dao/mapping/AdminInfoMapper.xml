<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.blog.db.admininfo.dao.AdminInfoMapper">
  <resultMap id="BaseResultMap" type="com.blog.db.admininfo.model.AdminInfo">
    <id column="ADMIN_ID" jdbcType="INTEGER" property="adminId" />
    <result column="ADMIN_TYPE" jdbcType="INTEGER" property="adminType" />
    <result column="USER_CODE" jdbcType="VARCHAR" property="userCode" />
    <result column="USER_PW" jdbcType="VARCHAR" property="userPw" />
    <result column="USER_NAME" jdbcType="VARCHAR" property="userName" />
    <result column="DEPARTMENT" jdbcType="VARCHAR" property="department" />
    <result column="STATUS" jdbcType="INTEGER" property="status" />
    <result column="NOTE" jdbcType="VARCHAR" property="note" />
    <result column="CREATION_DATE" jdbcType="TIMESTAMP" property="creationDate" />
    <result column="CREATED_BY" jdbcType="INTEGER" property="createdBy" />
    <result column="UPDATE_DATE" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="UPDATED_BY" jdbcType="INTEGER" property="updatedBy" />
  </resultMap>
  <sql id="Base_Column_List">
    ADMIN_ID, ADMIN_TYPE, USER_CODE, USER_PW, USER_NAME, DEPARTMENT, STATUS, NOTE, CREATION_DATE, 
    CREATED_BY, UPDATE_DATE, UPDATED_BY
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from admin_info
    where ADMIN_ID = #{adminId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from admin_info
    where ADMIN_ID = #{adminId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.blog.db.admininfo.model.AdminInfo" keyProperty="adminId" useGeneratedKeys="true">
    insert into admin_info (ADMIN_ID, ADMIN_TYPE, USER_CODE, 
      USER_PW, USER_NAME, DEPARTMENT, 
      STATUS, NOTE, CREATION_DATE, 
      CREATED_BY, UPDATE_DATE, UPDATED_BY
      )
    values (#{adminId,jdbcType=INTEGER}, #{adminType,jdbcType=INTEGER}, #{userCode,jdbcType=VARCHAR}, 
      #{userPw,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{department,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{note,jdbcType=VARCHAR}, #{creationDate,jdbcType=TIMESTAMP}, 
      #{createdBy,jdbcType=INTEGER}, #{updateDate,jdbcType=TIMESTAMP}, #{updatedBy,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.blog.db.admininfo.model.AdminInfo">
    insert into admin_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="adminId != null">
        ADMIN_ID,
      </if>
      <if test="adminType != null">
        ADMIN_TYPE,
      </if>
      <if test="userCode != null">
        USER_CODE,
      </if>
      <if test="userPw != null">
        USER_PW,
      </if>
      <if test="userName != null">
        USER_NAME,
      </if>
      <if test="department != null">
        DEPARTMENT,
      </if>
      <if test="status != null">
        STATUS,
      </if>
      <if test="note != null">
        NOTE,
      </if>
      <if test="creationDate != null">
        CREATION_DATE,
      </if>
      <if test="createdBy != null">
        CREATED_BY,
      </if>
      <if test="updateDate != null">
        UPDATE_DATE,
      </if>
      <if test="updatedBy != null">
        UPDATED_BY,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="adminId != null">
        #{adminId,jdbcType=INTEGER},
      </if>
      <if test="adminType != null">
        #{adminType,jdbcType=INTEGER},
      </if>
      <if test="userCode != null">
        #{userCode,jdbcType=VARCHAR},
      </if>
      <if test="userPw != null">
        #{userPw,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="department != null">
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="creationDate != null">
        #{creationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.blog.db.admininfo.model.AdminInfo">
    update admin_info
    <set>
      <if test="adminType != null">
        ADMIN_TYPE = #{adminType,jdbcType=INTEGER},
      </if>
      <if test="userCode != null">
        USER_CODE = #{userCode,jdbcType=VARCHAR},
      </if>
      <if test="userPw != null">
        USER_PW = #{userPw,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        USER_NAME = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="department != null">
        DEPARTMENT = #{department,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        STATUS = #{status,jdbcType=INTEGER},
      </if>
      <if test="note != null">
        NOTE = #{note,jdbcType=VARCHAR},
      </if>
      <if test="creationDate != null">
        CREATION_DATE = #{creationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null">
        CREATED_BY = #{createdBy,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        UPDATED_BY = #{updatedBy,jdbcType=INTEGER},
      </if>
    </set>
    where ADMIN_ID = #{adminId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.blog.db.admininfo.model.AdminInfo">
    update admin_info
    set ADMIN_TYPE = #{adminType,jdbcType=INTEGER},
      USER_CODE = #{userCode,jdbcType=VARCHAR},
      USER_PW = #{userPw,jdbcType=VARCHAR},
      USER_NAME = #{userName,jdbcType=VARCHAR},
      DEPARTMENT = #{department,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=INTEGER},
      NOTE = #{note,jdbcType=VARCHAR},
      CREATION_DATE = #{creationDate,jdbcType=TIMESTAMP},
      CREATED_BY = #{createdBy,jdbcType=INTEGER},
      UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
      UPDATED_BY = #{updatedBy,jdbcType=INTEGER}
    where ADMIN_ID = #{adminId,jdbcType=INTEGER}
  </update>	<!-- new add -->
	<select id="inspectPwd"
		parameterType="com.blog.api_backend.model.request.LoginBackendRequest"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from admin_info
		where 1 = 1
		and USER_CODE = #{userCode, jdbcType=VARCHAR}
		and USER_PW = #{password, jdbcType=VARCHAR}

	</select>

	<select id="selectByUserCode" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from admin_info
		where USER_CODE = #{userCode,jdbcType=VARCHAR}
	</select>

	<select id="queryAdminList" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from admin_info
	</select>

	<select id="inspectPwdForUpdatePassword"
		parameterType="com.blog.api_backend.model.request.UpdatePwRequest"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from admin_info
		where 1 = 1
		and USER_CODE = #{userCode, jdbcType=VARCHAR}
		and USER_PW = #{userPw, jdbcType=VARCHAR}

	</select>
</mapper>