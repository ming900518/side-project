<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.blog.db.operatinglog.dao.OperatingLogMapper">
  <resultMap id="BaseResultMap" type="com.blog.db.operatinglog.model.OperatingLog">
    <id column="OPERATING_LOG_ID" jdbcType="INTEGER" property="operatingLogId" />
    <result column="OPERATING_LOG_TYPE" jdbcType="INTEGER" property="operatingLogType" />
    <result column="TABLE_ID" jdbcType="INTEGER" property="tableId" />
    <result column="TABLE_PID" jdbcType="INTEGER" property="tablePid" />
    <result column="OPERATING_MODE" jdbcType="INTEGER" property="operatingMode" />
    <result column="USER_ID" jdbcType="INTEGER" property="userId" />
    <result column="REMARK" jdbcType="VARCHAR" property="remark" />
    <result column="CREATION_DATE" jdbcType="TIMESTAMP" property="creationDate" />
  </resultMap>
  <sql id="Base_Column_List">
    OPERATING_LOG_ID, OPERATING_LOG_TYPE, TABLE_ID, TABLE_PID, OPERATING_MODE, USER_ID, 
    REMARK, CREATION_DATE
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from operating_log
    where OPERATING_LOG_ID = #{operatingLogId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from operating_log
    where OPERATING_LOG_ID = #{operatingLogId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.blog.db.operatinglog.model.OperatingLog">
    insert into operating_log (OPERATING_LOG_ID, OPERATING_LOG_TYPE, 
      TABLE_ID, TABLE_PID, OPERATING_MODE, REMARK, CREATION_DATE
      )
    values (#{operatingLogId,jdbcType=INTEGER}, #{operatingLogType,jdbcType=INTEGER}, 
      #{tableId,jdbcType=INTEGER}, #{tablePid,jdbcType=INTEGER}, #{operatingMode,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, #{creationDate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.blog.db.operatinglog.model.OperatingLog">
    insert into operating_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="operatingLogId != null">
        OPERATING_LOG_ID,
      </if>
      <if test="operatingLogType != null">
        OPERATING_LOG_TYPE,
      </if>
      <if test="tableId != null">
        TABLE_ID,
      </if>
      <if test="tablePid != null">
        TABLE_PID,
      </if>
      <if test="operatingMode != null">
        OPERATING_MODE,
      </if>
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="remark != null">
        REMARK,
      </if>
      <if test="creationDate != null">
        CREATION_DATE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="operatingLogId != null">
        #{operatingLogId,jdbcType=INTEGER},
      </if>
      <if test="operatingLogType != null">
        #{operatingLogType,jdbcType=INTEGER},
      </if>
      <if test="tableId != null">
        #{tableId,jdbcType=INTEGER},
      </if>
      <if test="tablePid != null">
        #{tablePid,jdbcType=INTEGER},
      </if>
      <if test="operatingMode != null">
        #{operatingMode,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="creationDate != null">
        #{creationDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.blog.db.operatinglog.model.OperatingLog">
    update operating_log
    <set>
      <if test="operatingLogType != null">
        OPERATING_LOG_TYPE = #{operatingLogType,jdbcType=INTEGER},
      </if>
      <if test="tableId != null">
        TABLE_ID = #{tableId,jdbcType=INTEGER},
      </if>
      <if test="tablePid != null">
        TABLE_PID = #{tablePid,jdbcType=INTEGER},
      </if>
      <if test="operatingMode != null">
        OPERATING_MODE = #{operatingMode,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        USER_ID = #{userId,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="creationDate != null">
        CREATION_DATE = #{creationDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where OPERATING_LOG_ID = #{operatingLogId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.blog.db.operatinglog.model.OperatingLog">
    update operating_log
    set OPERATING_LOG_TYPE = #{operatingLogType,jdbcType=INTEGER},
      TABLE_ID = #{tableId,jdbcType=INTEGER},
      TABLE_PID = #{tablePid,jdbcType=INTEGER},
      OPERATING_MODE = #{operatingMode,jdbcType=INTEGER},
      USER_ID = #{userId,jdbcType=INTEGER},
      REMARK = #{remark,jdbcType=VARCHAR},
      CREATION_DATE = #{creationDate,jdbcType=TIMESTAMP}
    where OPERATING_LOG_ID = #{operatingLogId,jdbcType=INTEGER}
  </update>
  
  <resultMap id="OperatingLogViewMap" type="com.blog.api_backend.model.response.OperatingLogView">
    <id column="OPERATING_LOG_ID" jdbcType="INTEGER" property="operatingLogId" />
    <result column="OPERATING_LOG_TYPE" jdbcType="INTEGER" property="operatingLogType" />
    <result column="TABLE_ID" jdbcType="INTEGER" property="tableId" />
    <result column="TABLE_PID" jdbcType="INTEGER" property="tablePid" />
    <result column="OPERATING_MODE" jdbcType="INTEGER" property="operatingMode" />
    <result column="USER_ID" jdbcType="INTEGER" property="userId" />
    <result column="REMARK" jdbcType="VARCHAR" property="remark" />
    <result column="CREATION_DATE" jdbcType="TIMESTAMP" property="creationDate" />
    <result column="dataTitle" jdbcType="VARCHAR" property="dataTitle" />
    <result column="USER_NAME" jdbcType="VARCHAR" property="userName" />
  </resultMap>
  
   <select id="queryLogList" parameterType="java.util.Map" resultMap="OperatingLogViewMap">
    select  
	ol.OPERATING_LOG_ID, ol.OPERATING_LOG_TYPE, ol.TABLE_ID, ol.TABLE_PID, ol.USER_ID, 
    ol.REMARK, ol.CREATION_DATE ,ainfo.USER_NAME
    <if test=" tableId == 1 ">
		 ,ai.USER_NAME dataTitle
	</if>
	<if test=" tableId == 2 ">
		 ,ct.TITLE1 dataTitle , ct.CONTENT_TYPE OPERATING_MODE
	</if>
	from operating_log ol
		left join admin_info ainfo on ol.USER_ID = ainfo.ADMIN_ID
	<if test=" tableId == 1 ">
		left join admin_info ai on ol.TABLE_PID = ai.ADMIN_ID
	</if>
	<if test=" tableId == 2 ">
		left join content ct on ol.TABLE_PID =  ct.CONTENT_ID
	</if>
	where 1 = 1
	<if test="startDate != null and endDate !=null">
		and ol.CREATION_DATE between #{startDate,jdbcType=DATE} and #{endDate,jdbcType=DATE}
  	</if> 
  	order by ol.CREATION_DATE desc
  	
  </select>
</mapper>